name: ci

on:
  # Trigger the workflow on push to master or develop, except tag creation
  push:
    branches:
      - 'master'
      - 'develop'
    tags-ignore:
      - '**'

  # Trigger the workflow on pull request
  pull_request: ~

  # Trigger the workflow manually
  workflow_dispatch: ~

  # Trigger after public PR approved for CI
  pull_request_target:
    types: [labeled]

jobs:
  # Calls a reusable CI workflow to qa, test & deploy the current repository.
  #   It will pull in all needed dependencies and produce a code coverage report on success.
  #   If all checks were successful and a new release tag pushed, the package will be published on PyPI.
  #   In case the job fails, a message will be posted to a Microsoft Teams channel.
  ci:
    name: ci
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    uses: ecmwf-actions/reusable-workflows/.github/workflows/ci-python.yml@v1
    with:
      codecov_upload: true
      notify_teams: true
      build_package_inputs: |
        self_build: false
        dependencies: |
          ecmwf/ecbuild
          ecmwf/eckit
          ecmwf/odc
        dependency_branch: develop
    secrets:
      pypi_username: ${{ secrets.PYPI_USERNAME }}
      pypi_password: ${{ secrets.PYPI_PASSWORD }}
      incoming_webhook: ${{ secrets.MS_TEAMS_INCOMING_WEBHOOK }}

  # Run CI including downstream packages on self-hosted runners
  downstream-ci:
    name: downstream-ci
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    uses: ecmwf-actions/downstream-ci/.github/workflows/downstream-ci.yml@main
    with:
      pyodc: ecmwf/pyodc@${{ github.event.pull_request.head.sha || github.sha }}
    secrets: inherit

  # Build downstream packages on HPC
  downstream-ci-hpc:
    name: downstream-ci-hpc
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    uses: ecmwf-actions/downstream-ci/.github/workflows/downstream-ci-hpc.yml@main
    with:
      pyodc: ecmwf/pyodc@${{ github.event.pull_request.head.sha || github.sha }}
    secrets: inherit
